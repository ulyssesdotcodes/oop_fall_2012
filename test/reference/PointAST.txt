Java to C++ translator, v. 2.3.1, (C) 2012 QIMPP
Processing Point.java ...
CompilationUnit(
  null,
  ClassDeclaration(
    Modifiers(
      Modifier(
        "public"
      )
    ),
    "Point",
    null,
    null,
    null,
    ClassBody(
      FieldDeclaration(
        Modifiers(
          Modifier(
            "public"
          ),
          Modifier(
            "static"
          ),
          Modifier(
            "final"
          )
        ),
        Type(
          PrimitiveType(
            "int"
          ),
          null
        ),
        Declarators(
          Declarator(
            "DIMENSIONS",
            null,
            IntegerLiteral(
              "4"
            )
          )
        )
      ),
      FieldDeclaration(
        Modifiers(
          Modifier(
            "public"
          ),
          Modifier(
            "static"
          ),
          Modifier(
            "final"
          )
        ),
        Type(
          QualifiedIdentifier(
            "Point"
          ),
          null
        ),
        Declarators(
          Declarator(
            "ORIGIN",
            null,
            NewClassExpression(
              null,
              null,
              QualifiedIdentifier(
                "Point"
              ),
              Arguments(
                IntegerLiteral(
                  "0"
                ),
                IntegerLiteral(
                  "0"
                ),
                IntegerLiteral(
                  "0"
                ),
                IntegerLiteral(
                  "0"
                )
              ),
              null
            )
          )
        )
      ),
      FieldDeclaration(
        Modifiers(
          Modifier(
            "private"
          ),
          Modifier(
            "final"
          )
        ),
        Type(
          PrimitiveType(
            "double"
          ),
          Dimensions(
            "["
          )
        ),
        Declarators(
          Declarator(
            "coordinates",
            null,
            null
          )
        )
      ),
      ConstructorDeclaration(
        Modifiers(
          Modifier(
            "public"
          )
        ),
        null,
        "Point",
        FormalParameters(
          FormalParameter(
            Modifiers(),
            Type(
              PrimitiveType(
                "double"
              ),
              null
            ),
            null,
            "c1",
            null
          ),
          FormalParameter(
            Modifiers(),
            Type(
              PrimitiveType(
                "double"
              ),
              null
            ),
            null,
            "c2",
            null
          ),
          FormalParameter(
            Modifiers(),
            Type(
              PrimitiveType(
                "double"
              ),
              null
            ),
            null,
            "c3",
            null
          ),
          FormalParameter(
            Modifiers(),
            Type(
              PrimitiveType(
                "double"
              ),
              null
            ),
            null,
            "c4",
            null
          )
        ),
        null,
        Block(
          ExpressionStatement(
            Expression(
              PrimaryIdentifier(
                "coordinates"
              ),
              "=",
              NewArrayExpression(
                PrimitiveType(
                  "double"
                ),
                null,
                Dimensions(
                  "["
                ),
                ArrayInitializer(
                  PrimaryIdentifier(
                    "c1"
                  ),
                  PrimaryIdentifier(
                    "c2"
                  ),
                  PrimaryIdentifier(
                    "c3"
                  ),
                  PrimaryIdentifier(
                    "c4"
                  )
                )
              )
            )
          )
        )
      ),
      MethodDeclaration(
        Modifiers(
          Modifier(
            "public"
          )
        ),
        null,
        Type(
          PrimitiveType(
            "double"
          ),
          null
        ),
        "getCoordinate",
        FormalParameters(
          FormalParameter(
            Modifiers(),
            Type(
              PrimitiveType(
                "int"
              ),
              null
            ),
            null,
            "idx",
            null
          )
        ),
        null,
        null,
        Block(
          ReturnStatement(
            SubscriptExpression(
              PrimaryIdentifier(
                "coordinates"
              ),
              PrimaryIdentifier(
                "idx"
              )
            )
          )
        )
      ),
      MethodDeclaration(
        Modifiers(
          Modifier(
            "public"
          )
        ),
        null,
        Type(
          PrimitiveType(
            "double"
          ),
          null
        ),
        "getDistanceFrom",
        FormalParameters(
          FormalParameter(
            Modifiers(),
            Type(
              QualifiedIdentifier(
                "Point"
              ),
              null
            ),
            null,
            "p",
            null
          )
        ),
        null,
        null,
        Block(
          FieldDeclaration(
            Modifiers(),
            Type(
              PrimitiveType(
                "double"
              ),
              null
            ),
            Declarators(
              Declarator(
                "distanceSquared",
                null,
                IntegerLiteral(
                  "0"
                )
              )
            )
          ),
          ConditionalStatement(
            Expression(
              PrimaryIdentifier(
                "distanceSquared"
              ),
              "=",
              IntegerLiteral(
                "0"
              )
            ),
            Block(
              FieldDeclaration(
                Modifiers(),
                Type(
                  PrimitiveType(
                    "int"
                  ),
                  null
                ),
                Declarators(
                  Declarator(
                    "a",
                    null,
                    IntegerLiteral(
                      "23"
                    )
                  )
                )
              )
            ),
            null
          ),
          ForStatement(
            BasicForControl(
              Modifiers(),
              Type(
                PrimitiveType(
                  "int"
                ),
                null
              ),
              Declarators(
                Declarator(
                  "i",
                  null,
                  IntegerLiteral(
                    "0"
                  )
                )
              ),
              RelationalExpression(
                PrimaryIdentifier(
                  "i"
                ),
                "<",
                PrimaryIdentifier(
                  "DIMENSIONS"
                )
              ),
              ExpressionList(
                PostfixExpression(
                  PrimaryIdentifier(
                    "i"
                  ),
                  "++"
                )
              )
            ),
            Block(
              FieldDeclaration(
                Modifiers(),
                Type(
                  PrimitiveType(
                    "double"
                  ),
                  null
                ),
                Declarators(
                  Declarator(
                    "diff",
                    null,
                    AdditiveExpression(
                      CallExpression(
                        ThisExpression(
                          null
                        ),
                        null,
                        "getCoordinate",
                        Arguments(
                          PrimaryIdentifier(
                            "i"
                          )
                        )
                      ),
                      "-",
                      CallExpression(
                        PrimaryIdentifier(
                          "p"
                        ),
                        null,
                        "getCoordinate",
                        Arguments(
                          PrimaryIdentifier(
                            "i"
                          )
                        )
                      )
                    )
                  )
                )
              ),
              ExpressionStatement(
                Expression(
                  PrimaryIdentifier(
                    "distanceSquared"
                  ),
                  "+=",
                  MultiplicativeExpression(
                    PrimaryIdentifier(
                      "diff"
                    ),
                    "*",
                    PrimaryIdentifier(
                      "diff"
                    )
                  )
                )
              )
            )
          ),
          ReturnStatement(
            CallExpression(
              PrimaryIdentifier(
                "Math"
              ),
              null,
              "sqrt",
              Arguments(
                PrimaryIdentifier(
                  "distanceSquared"
                )
              )
            )
          )
        )
      ),
      MethodDeclaration(
        Modifiers(
          Modifier(
            "public"
          )
        ),
        null,
        Type(
          QualifiedIdentifier(
            "String"
          ),
          null
        ),
        "toString",
        FormalParameters(),
        null,
        null,
        Block(
          ReturnStatement(
            AdditiveExpression(
              AdditiveExpression(
                AdditiveExpression(
                  AdditiveExpression(
                    AdditiveExpression(
                      AdditiveExpression(
                        AdditiveExpression(
                          AdditiveExpression(
                            StringLiteral(
                              "\"Point(\""
                            ),
                            "+",
                            CallExpression(
                              null,
                              null,
                              "getCoordinate",
                              Arguments(
                                IntegerLiteral(
                                  "0"
                                )
                              )
                            )
                          ),
                          "+",
                          StringLiteral(
                            "\", \""
                          )
                        ),
                        "+",
                        CallExpression(
                          null,
                          null,
                          "getCoordinate",
                          Arguments(
                            IntegerLiteral(
                              "1"
                            )
                          )
                        )
                      ),
                      "+",
                      StringLiteral(
                        "\", \""
                      )
                    ),
                    "+",
                    CallExpression(
                      null,
                      null,
                      "getCoordinate",
                      Arguments(
                        IntegerLiteral(
                          "2"
                        )
                      )
                    )
                  ),
                  "+",
                  StringLiteral(
                    "\", \""
                  )
                ),
                "+",
                CallExpression(
                  null,
                  null,
                  "getCoordinate",
                  Arguments(
                    IntegerLiteral(
                      "3"
                    )
                  )
                )
              ),
              "+",
              StringLiteral(
                "\")\""
              )
            )
          )
        )
      ),
      MethodDeclaration(
        Modifiers(
          Modifier(
            "public"
          ),
          Modifier(
            "static"
          )
        ),
        null,
        VoidType(),
        "main",
        FormalParameters(
          FormalParameter(
            Modifiers(),
            Type(
              QualifiedIdentifier(
                "String"
              ),
              Dimensions(
                "["
              )
            ),
            null,
            "args",
            null
          )
        ),
        null,
        null,
        Block(
          FieldDeclaration(
            Modifiers(),
            Type(
              QualifiedIdentifier(
                "Point"
              ),
              null
            ),
            Declarators(
              Declarator(
                "p1",
                null,
                NewClassExpression(
                  null,
                  null,
                  QualifiedIdentifier(
                    "Point"
                  ),
                  Arguments(
                    IntegerLiteral(
                      "1"
                    ),
                    IntegerLiteral(
                      "2"
                    ),
                    IntegerLiteral(
                      "3"
                    ),
                    IntegerLiteral(
                      "4"
                    )
                  ),
                  null
                )
              )
            )
          ),
          ExpressionStatement(
            CallExpression(
              SelectionExpression(
                PrimaryIdentifier(
                  "System"
                ),
                "out"
              ),
              null,
              "println",
              Arguments(
                PrimaryIdentifier(
                  "p1"
                )
              )
            )
          ),
          ExpressionStatement(
            CallExpression(
              SelectionExpression(
                PrimaryIdentifier(
                  "System"
                ),
                "out"
              ),
              null,
              "println",
              Arguments(
                AdditiveExpression(
                  StringLiteral(
                    "\"Distance from origin: \""
                  ),
                  "+",
                  CallExpression(
                    PrimaryIdentifier(
                      "p1"
                    ),
                    null,
                    "getDistanceFrom",
                    Arguments(
                      PrimaryIdentifier(
                        "ORIGIN"
                      )
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
:: = {
  ::Point = {
    DIMENSIONS = "declaration";
    ORIGIN = "declaration";
    coordinates = "declaration";
    ::__constructor_0 = {
    };
    ::getCoordinate = {
    };
    ::getDistanceFrom = {
      distanceSquared = "declaration";
      ::__for_2 = {
        i = "declaration";
        ::__tmp_3 = {
          diff = "declaration";
        };
      };
      ::__tmp_1 = {
        a = "declaration";
      };
    };
    ::main = {
      p1 = "declaration";
    };
    ::toString = {
    };
  };
};
